name: build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}

      #- name: Package for macOS
      #  if: matrix.target == 'x86_64-apple-darwin'
      #  run: |
      #    zip --junk-paths quika-${{ matrix.target }} target/${{ matrix.target }}/release/quika

      #- name: Package for windows
      #  if: matrix.target == 'x86_64-pc-windows-msvc'
      #  run: |
      #    powershell Compress-Archive -Path target/${{ matrix.target }}/release/quika.exe -DestinationPath quika-${{ matrix.target }}.zip

      #- uses: actions/upload-artifact@v2
      #  with:
      #    name: quika-${{ matrix.target }}
      #    path: quika-${{ matrix.target }}.zip

      - uses: actions/upload-artifact@v2
        if: matrix.target == 'x86_64-apple-darwin'
        with:
          name: quika-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/quika

      - uses: actions/upload-artifact@v2
        if: matrix.target == 'x86_64-pc-windows-msvc'
        with:
          name: quika-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/quika.exe
